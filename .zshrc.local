# Aliases
alias muttu="mutt -F ~/.config/mutt/muttrc.tu-clausthal"
alias muttm="mutt -F ~/.config/mutt/muttrc.mailbox"
alias mutta="mutt -F ~/.config/mutt/muttrc.archlinux"
alias gdb="gdb -q"
alias mksrcinfo="makepkg --printsrcinfo > .SRCINFO"
alias makefmt="shfmt -i 2 -ci -kp -w PKGBUILD"
alias mosh="mosh --predict=experimental"
alias mpv="mpv --audio-display=no"
alias sc="systemctl"
alias rc="resolvectl"
alias jc="journalctl"
alias d="docker"
alias vim="nvim"
alias gocover="go test -coverprofile=coverage.out ./... && go tool cover -html=coverage.out"
alias g="git"
alias gdiff="git diff --no-index"
alias nocomment="grep '^[[:blank:]]*[^[:blank:]#;]'"

if [ -x "$(command -v kubectl)" ]; then
  # Kubernetes alias
  alias k="kubectl"
  alias kl="kubectl logs"
  alias ka="kubectl apply"
  alias kc="kubectl create"
  alias kd="kubectl describe"
  alias kg="kubectl get"
  alias ke="kubectl edit"
  # we explicitly do not set kubectl delete here
  alias wkg="watch kubectl get"
  function kesh() {
    kubectl exec -it "$1" -- bash || ash || sh
  }
fi

if [ -x "$(command -v exa)" ]; then
  alias l="exa"
  alias ls="exa"
  alias ll="exa -l --git"
  alias tree="exa -T"
  alias gtree="exa -l -T --git"
fi

if [ -x "$(command -v rg)" ]; then
  export SKIM_CTRL_T_COMMAND='rg --files --no-ignore --hidden --glob "!.git/*"'
  export SKIM_DEFAULT_COMMAND='rg --files --no-ignore --hidden --glob "!.git/*"'
  export SKIM_DEFAULT_OPTIONS="-e --bind 'alt-j:down,alt-k:up,enter:accept'"
  export SKIM_CTRL_R_OPTS="-e"
  export SKIM_POST_HOOK='REPORTTIME=$_REPORTTIME; unset _REPORTTIME'
  export SKIM_PRE_HOOK='_REPORTTIME=$REPORTTIME; unset REPORTTIME'
  function search_all() {
    LBUFFER+=$(sk --ansi -e -m -c "rg --files --no-ignore --hidden --glob '!.git/*' /" <$TTY)
  }
  zle -N search_all
  bindkey "^xa" search_all
  function search_home() {
    LBUFFER+=$(sk --ansi -e -m -c "rg --files --no-ignore --hidden --glob '!.git/*' $HOME" <$TTY)
  }
  zle -N search_home
  bindkey "^xh" search_home
fi

# Named Directories
hash -d aur=/home/chris/archlinux/archlinux/aur/
hash -d community=/home/chris/archlinux/svn-community

# Source environment variables
eval $(sed 's/^/export /' $HOME/.config/environment.d/envvars.conf)

# Exec sway
if [ "$(tty)" = "/dev/tty1" ]; then
  exec systemd-cat --identifier=sway sway
fi
